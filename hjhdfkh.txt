user :root@localhost
hostname:BASHEKAHE


server.js

const express = require('express');
const cors = require('cors');
const path = require('path');
const connection = require('./db');

const app = express();
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.use(express.static(path.join(__dirname, 'client/build')));

// API endpoint for getting all books
app.get('/api/books', (req, res) => {
  const sql = 'SELECT * FROM books';
  connection.query(sql, (err, results) => {
    if (err) throw err;
    res.send(results);
  });
});

// API endpoint for adding a book
app.post('/api/books', (req, res) => {
  const book = req.body;
  const sql = 'INSERT INTO books SET ?';
  connection.query(sql, book, (err, result) => {
    if (err) throw err;
    console.log(result);
    res.send('Book added successfully!');
  });
});

// API endpoint for updating a book
app.put('/api/books/:book_id', (req, res) => {
  const book_id = req.params.book_id;
  const updatedBook = req.body;
  const sql = 'UPDATE books SET ? WHERE book_id = ?';
  connection.query(sql, [updatedBook, book_id], (err, result) => {
    if (err) throw err;
    console.log(result);
    res.send('Book updated successfully!');
  });
});

// API endpoint for deleting a book
app.delete('/api/books/:book_id', (req, res) => {
  const book_id = req.params.book_id;
  const sql = 'DELETE FROM books WHERE book_id = ?';
  connection.query(sql, book_id, (err, result) => {
    if (err) throw err;
    console.log(result);
    res.send('Book deleted successfully!');
  });
});

// Serve the React app
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client/build', 'index.html'));
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`Server started on port ${PORT}`);
});
